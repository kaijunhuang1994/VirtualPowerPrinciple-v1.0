
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftPOWERrightUMINUSBOOLEAN CLOSE_BRACKET CLOSE_CURLY_BRACKET CLOSE_PARENTHESIS COLON COMMA COMMENT DIVIDE EQUALS FLOAT INTEGER MINUS OPEN_BRACKET OPEN_CURLY_BRACKET OPEN_PARENTHESIS PLUS POWER STRING TIMES VARIABLEdatabase : contents_rootempty :contents_root : emptycontents_root : contents_root assigncontents_root : contents_root COMMENTcontents : emptycontents : contents assigncontents : contents COMMENTblock : OPEN_CURLY_BRACKET contents CLOSE_CURLY_BRACKET\n    assign : VARIABLE EQUALS expr\n    assign : VARIABLE EQUALS list\n    assign : VARIABLE EQUALS tuple\n    assign : VARIABLE EQUALS dictionary\n    assign : VARIABLE EQUALS STRING\n    assign : VARIABLE EQUALS BOOLEAN\n    assign : VARIABLE block\n    expr : expr PLUS expr\n         | expr MINUS expr\n         | expr TIMES expr\n         | expr DIVIDE expr\n         | expr POWER expr\n    expr : MINUS expr %prec UMINUS\n    expr : INTEGER\n         | FLOAT\n    expr : VARIABLEexpr : OPEN_PARENTHESIS expr CLOSE_PARENTHESISlist : OPEN_BRACKET CLOSE_BRACKETlist : OPEN_BRACKET item CLOSE_BRACKETlist : OPEN_BRACKET items CLOSE_BRACKETlist : itemstuple : OPEN_PARENTHESIS items CLOSE_PARENTHESISitems : item COMMA itemsitems : item COMMA item\n    item : expr\n    item : tuple\n    item : dictionary\n    item : BOOLEAN\n    item : STRING\n    dictionary : OPEN_CURLY_BRACKET dictionary_items CLOSE_CURLY_BRACKETdictionary : OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKETdictionary_items : dictionary_itemdictionary_items : dictionary_item COMMA dictionary_itemsdictionary_item : key COLON item\n    key : STRING\n    key : INTEGER\n    key : FLOAT\n    key : BOOLEAN\n    '
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,18,19,23,25,26,32,36,37,38,39,40,43,46,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,],[-2,5,-3,-4,-5,-16,-2,-25,-10,-11,-12,-13,-14,-15,-23,-24,-30,55,-6,-22,-35,-36,-37,-38,-27,-34,-40,-9,-7,-8,-17,-18,-19,-20,-21,-26,-31,-28,-29,-33,-32,-39,]),'VARIABLE':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,36,37,38,39,40,43,44,46,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,70,],[-2,6,-3,-4,-5,10,-16,-2,-25,-10,-11,-12,-13,-14,-15,10,-23,-24,10,10,-30,6,-6,10,10,10,10,10,-22,10,-35,-36,-37,-38,-27,-34,10,-40,-9,-7,-8,-17,-18,-19,-20,-21,-26,-31,-28,-29,-33,-32,-39,10,]),'$end':([0,1,2,3,4,5,8,10,11,12,13,14,15,16,18,19,23,32,36,37,38,39,40,43,46,53,56,57,58,59,60,62,63,64,65,66,67,68,],[-2,0,-1,-3,-4,-5,-16,-25,-10,-11,-12,-13,-14,-15,-23,-24,-30,-22,-35,-36,-37,-38,-27,-34,-40,-9,-17,-18,-19,-20,-21,-26,-31,-28,-29,-33,-32,-39,]),'EQUALS':([6,],[7,]),'OPEN_CURLY_BRACKET':([6,7,20,21,44,70,],[9,24,24,24,24,24,]),'STRING':([7,20,21,24,44,69,70,],[15,39,39,49,39,49,39,]),'BOOLEAN':([7,20,21,24,44,69,70,],[16,38,38,52,38,52,38,]),'MINUS':([7,10,11,17,18,19,20,21,27,28,29,30,31,32,33,34,43,44,56,57,58,59,60,61,62,70,],[17,-25,28,17,-23,-24,17,17,17,17,17,17,17,-22,17,28,28,17,-17,-18,-19,-20,-21,28,-26,17,]),'INTEGER':([7,17,20,21,24,27,28,29,30,31,33,44,69,70,],[18,18,18,18,50,18,18,18,18,18,18,18,50,18,]),'FLOAT':([7,17,20,21,24,27,28,29,30,31,33,44,69,70,],[19,19,19,19,51,19,19,19,19,19,19,19,51,19,]),'OPEN_PARENTHESIS':([7,17,20,21,27,28,29,30,31,33,44,70,],[20,33,20,20,33,33,33,33,33,33,20,20,]),'OPEN_BRACKET':([7,],[21,]),'CLOSE_CURLY_BRACKET':([8,9,10,11,12,13,14,15,16,18,19,23,24,25,26,32,36,37,38,39,40,43,45,46,47,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,71,72,],[-16,-2,-25,-10,-11,-12,-13,-14,-15,-23,-24,-30,46,53,-6,-22,-35,-36,-37,-38,-27,-34,68,-40,-41,-9,-7,-8,-17,-18,-19,-20,-21,-26,-31,-28,-29,-33,-32,-39,-42,-43,]),'PLUS':([10,11,18,19,32,34,43,56,57,58,59,60,61,62,],[-25,27,-23,-24,-22,27,27,-17,-18,-19,-20,-21,27,-26,]),'TIMES':([10,11,18,19,32,34,43,56,57,58,59,60,61,62,],[-25,29,-23,-24,-22,29,29,29,29,-19,-20,-21,29,-26,]),'DIVIDE':([10,11,18,19,32,34,43,56,57,58,59,60,61,62,],[-25,30,-23,-24,-22,30,30,30,30,-19,-20,-21,30,-26,]),'POWER':([10,11,18,19,32,34,43,56,57,58,59,60,61,62,],[-25,31,-23,-24,-22,31,31,31,31,31,31,-21,31,-26,]),'COMMA':([10,11,13,14,15,16,18,19,22,32,34,36,37,38,39,41,43,46,47,56,57,58,59,60,62,63,66,68,72,],[-25,-34,-35,-36,-38,-37,-23,-24,44,-22,-34,-35,-36,-37,-38,44,-34,-40,69,-17,-18,-19,-20,-21,-26,-31,44,-39,-43,]),'CLOSE_PARENTHESIS':([10,18,19,32,34,35,36,37,38,39,43,46,56,57,58,59,60,61,62,63,66,67,68,],[-25,-23,-24,-22,62,63,-35,-36,-37,-38,-34,-40,-17,-18,-19,-20,-21,62,-26,-31,-33,-32,-39,]),'CLOSE_BRACKET':([10,18,19,21,32,36,37,38,39,41,42,43,46,56,57,58,59,60,62,63,66,67,68,],[-25,-23,-24,40,-22,-35,-36,-37,-38,64,65,-34,-40,-17,-18,-19,-20,-21,-26,-31,-33,-32,-39,]),'COLON':([48,49,50,51,52,],[70,-44,-45,-46,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'database':([0,],[1,]),'contents_root':([0,],[2,]),'empty':([0,9,],[3,26,]),'assign':([2,25,],[4,54,]),'block':([6,],[8,]),'expr':([7,17,20,21,27,28,29,30,31,33,44,70,],[11,32,34,43,56,57,58,59,60,61,43,43,]),'list':([7,],[12,]),'tuple':([7,20,21,44,70,],[13,36,36,36,36,]),'dictionary':([7,20,21,44,70,],[14,37,37,37,37,]),'item':([7,20,21,44,70,],[22,22,41,66,72,]),'items':([7,20,21,44,],[23,35,42,67,]),'contents':([9,],[25,]),'dictionary_items':([24,69,],[45,71,]),'dictionary_item':([24,69,],[47,47,]),'key':([24,69,],[48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> database","S'",1,None,None,None),
  ('database -> contents_root','database',1,'p_database','newparser.py',27),
  ('empty -> <empty>','empty',0,'p_empty','newparser.py',32),
  ('contents_root -> empty','contents_root',1,'p_contents_root_empty','newparser.py',37),
  ('contents_root -> contents_root assign','contents_root',2,'p_contents_root_append_assign','newparser.py',42),
  ('contents_root -> contents_root COMMENT','contents_root',2,'p_contents_root_comment','newparser.py',47),
  ('contents -> empty','contents',1,'p_contents_empty','newparser.py',52),
  ('contents -> contents assign','contents',2,'p_contents_append_assign','newparser.py',57),
  ('contents -> contents COMMENT','contents',2,'p_contents_comment','newparser.py',63),
  ('block -> OPEN_CURLY_BRACKET contents CLOSE_CURLY_BRACKET','block',3,'p_block','newparser.py',68),
  ('assign -> VARIABLE EQUALS expr','assign',3,'p_assign','newparser.py',76),
  ('assign -> VARIABLE EQUALS list','assign',3,'p_assign','newparser.py',77),
  ('assign -> VARIABLE EQUALS tuple','assign',3,'p_assign','newparser.py',78),
  ('assign -> VARIABLE EQUALS dictionary','assign',3,'p_assign','newparser.py',79),
  ('assign -> VARIABLE EQUALS STRING','assign',3,'p_assign','newparser.py',80),
  ('assign -> VARIABLE EQUALS BOOLEAN','assign',3,'p_assign','newparser.py',81),
  ('assign -> VARIABLE block','assign',2,'p_assign_block','newparser.py',87),
  ('expr -> expr PLUS expr','expr',3,'p_expr_operator','newparser.py',93),
  ('expr -> expr MINUS expr','expr',3,'p_expr_operator','newparser.py',94),
  ('expr -> expr TIMES expr','expr',3,'p_expr_operator','newparser.py',95),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_operator','newparser.py',96),
  ('expr -> expr POWER expr','expr',3,'p_expr_operator','newparser.py',97),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','newparser.py',103),
  ('expr -> INTEGER','expr',1,'p_expr_integer','newparser.py',109),
  ('expr -> FLOAT','expr',1,'p_expr_integer','newparser.py',110),
  ('expr -> VARIABLE','expr',1,'p_expr_variable','newparser.py',116),
  ('expr -> OPEN_PARENTHESIS expr CLOSE_PARENTHESIS','expr',3,'p_factor_expr','newparser.py',121),
  ('list -> OPEN_BRACKET CLOSE_BRACKET','list',2,'p_list_empty','newparser.py',126),
  ('list -> OPEN_BRACKET item CLOSE_BRACKET','list',3,'p_list_single_expr','newparser.py',131),
  ('list -> OPEN_BRACKET items CLOSE_BRACKET','list',3,'p_list_brackets','newparser.py',136),
  ('list -> items','list',1,'p_list_bare','newparser.py',141),
  ('tuple -> OPEN_PARENTHESIS items CLOSE_PARENTHESIS','tuple',3,'p_tuple','newparser.py',146),
  ('items -> item COMMA items','items',3,'p_items_comma','newparser.py',151),
  ('items -> item COMMA item','items',3,'p_items_expr','newparser.py',157),
  ('item -> expr','item',1,'p_item','newparser.py',163),
  ('item -> tuple','item',1,'p_item','newparser.py',164),
  ('item -> dictionary','item',1,'p_item','newparser.py',165),
  ('item -> BOOLEAN','item',1,'p_item','newparser.py',166),
  ('item -> STRING','item',1,'p_item','newparser.py',167),
  ('dictionary -> OPEN_CURLY_BRACKET dictionary_items CLOSE_CURLY_BRACKET','dictionary',3,'p_dictionary','newparser.py',173),
  ('dictionary -> OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET','dictionary',2,'p_dictionary_empty','newparser.py',178),
  ('dictionary_items -> dictionary_item','dictionary_items',1,'p_dictionary_items_single','newparser.py',183),
  ('dictionary_items -> dictionary_item COMMA dictionary_items','dictionary_items',3,'p_dictionary_items_multiple','newparser.py',188),
  ('dictionary_item -> key COLON item','dictionary_item',3,'p_dictionary_item','newparser.py',193),
  ('key -> STRING','key',1,'p_key','newparser.py',200),
  ('key -> INTEGER','key',1,'p_key','newparser.py',201),
  ('key -> FLOAT','key',1,'p_key','newparser.py',202),
  ('key -> BOOLEAN','key',1,'p_key','newparser.py',203),
]
